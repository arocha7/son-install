---
- name: deployment of SP GATEKEEPER as a Docker containers from Registry
  hosts: "{{ target }}"
  become: true
  tasks:

  # Running the Sonata GK Docker Images

  - name: GATEKEEPER GUI - running Docker containers
    docker_container:
      name: son-gui
      image: sonatanfv/son-gui
      env:
        MON_URL: "{{ public_ip }}:8000"
        GK_URL: "{{ public_ip }}:32001"
        LOGS_URL: "{{ public_ip }}:12900"
      state: started
      exposed_ports: 80
      ports: "80:80"
      volumes:
        - /var/log/sonata/son-gtkgui:/var/log/son-gtkgui
      log_driver: syslog

#  - wait_for: host=0.0.0.0 port=80 timeout=300 delay=10 state=started

  - name: GATEKEEPER BSS - running Docker containers
    docker_container:
      name: son-bss
      image: sonatanfv/son-yo-gen-bss
      command: grunt serve:integration --gkApiUrl=http://{{ public_ip }}:32001
      state: started
      ports: "25001:1337"
      volumes:
        - /var/log/sonata/son-yo-gen-bss:/var/log/son-yo-gen-bss
      log_driver: syslog

#  - wait_for: host=0.0.0.0 port=1337 timeout=300 delay=10 state=started

  - name: GATEKEEPER PACKAGES - running Docker containers
    docker_container:
      name: son-gtkpkg
      image: sonatanfv/son-gtkpkg
      env:
        CATALOGUES_URL: http://{{ public_ip }}:4002/catalogues
        RACK_ENV: integration
      state: started
      ports: "5100:5100"
      volumes:
        - /var/log/sonata/son-gtkpkg:/var/log/son-gtkpkg
      log_driver: syslog

#  - wait_for: host=0.0.0.0 port=5100 timeout=300 delay=10 state=started

  - name: GATEKEEPER SERVICES - running Docker containers
    docker_container:
      name: son-gtksrv
      image: sonatanfv/son-gtksrv
      env:
        CATALOGUES_URL: http://{{ public_ip }}:4002/catalogues
        RACK_ENV: integration
        MQSERVER: amqp://guest:guest@{{ public_ip }}:5672
        DATABASE_HOST: "{{ public_ip }}"
        DATABASE_PORT: 5432
        POSTGRES_PASSWORD: sonata
        POSTGRES_USER: sonatatest
      links:
        - son-broker
      state: started
      restart_policy: "unless-stopped"
      ports: "5300:5300"
      volumes:
        - /home/{{ ansible_user_id }}/son-gkeeper/son-gtksrv/:/opt/sonata/son-gktsrv
        - /var/log/sonata/son-gtksrv:/var/log/son-gtksrv
      log_driver: syslog

#  - wait_for: host=0.0.0.0 port=5300 timeout=300 delay=10 state=started

  - name: create data model and populate db
    command: /usr/bin/docker exec -d son-gtksrv /bin/bash -c "cd /opt/sonata/son-gtksrv" && "bundle install" && "bundle exec rake db:migrate"

#  - name: wait for Container to finish
#    shell: >
#      docker wait son-gtksrv

  - name: GATEKEEPER FUNCTIONS - running Docker containers
    docker_container:
      name: son-gtkfnct
      image: sonatanfv/son-gtkfnct
      env:
        CATALOGUES_URL: http://{{ public_ip }}:4002/catalogues
        RACK_ENV: integration
      state: started
      restart_policy: "unless-stopped"
      ports: "5500:5500"
      volumes:
        - /var/log/sonata/son-gtkfnct:/var/log/son-gtkfnct
      log_driver: syslog

#  - wait_for: host=0.0.0.0 port=5500 timeout=300 delay=10 state=started

  - name: GATEKEEPER RECORDS - running Docker containers
    docker_container:
      name: son-gtkrec
      image: sonatanfv/son-gtkrec
      env:
        REPOSITORIES_URL: http://{{ public_ip }}:4002/records
        RACK_ENV: integration
      state: started
      restart_policy: "unless-stopped"
      ports: "5800:5800"
      volumes:
        - /var/log/sonata/son-gtkrec:/var/log/son-gtkrec
      log_driver: syslog

#  - wait_for: host=0.0.0.0 port=5800 timeout=300 delay=10 state=started

  - name: GATEKEEPER VIM - running Docker containers
    docker_container:
      name: son-gtkvim
      image: sonatanfv/son-gtkvim
      env:
        RACK_ENV: integration
        MQSERVER: amqp://guest:guest@{{ public_ip }}:5672
        DATABASE_HOST: "{{ public_ip }}"
        DATABASE_PORT: 5432
        POSTGRES_PASSWORD: sonata
        POSTGRES_USER: sonatatest
      links:
        - son-broker
      state: started
      restart_policy: "unless-stopped"
      ports: "5700:5700"
      volumes:
        - /home/{{ ansible_user_id }}/son-gkeeper/son-gtkvim/:/opt/sonata/son-gktvim
        - /var/log/sonata/son-gtkvim:/var/log/son-gtkvim
      log_driver: syslog

#  - wait_for: host=0.0.0.0 port=5700 timeout=300 delay=10 state=started

  - name: create data model and populate db
    command: /usr/bin/docker exec -d son-gtkvim /bin/bash -c "cd /opt/sonata/son-gtkvim" && "bundle install" && "bundle exec rake db:migrate"

#  - name: wait for Container to finish
#    shell: >
#      docker wait son-gtkvim

  - name: GATEKEEPER API - running Docker containers
    docker_container:
      name: son-gtkapi
      image: sonatanfv/son-gtkapi
      env:
        RACK_ENV: integration
        PACKAGE_MANAGEMENT_URL: http://{{ public_ip }}:5100
        SERVICE_MANAGEMENT_URL: http://{{ public_ip }}:5300
        FUNCTION_MANAGEMENT_URL: http://{{ public_ip }}:5500
        VIM_MANAGEMENT_URL: http://{{ public_ip }}:5700 
        RECORD_MANAGEMENT_URL: http://{{ public_ip }}:5800
      links:
        - son-gtkpkg
        - son-gtkfnct
        - son-gtkrec
        - son-gtksrv
        - son-gtkvim
      state: started
      restart_policy: "unless-stopped"
      ports: "32001:5000"
      volumes:
        - /var/log/sonata/son-gtkapi:/var/log/son-gtkapi
      log_driver: syslog

#  - wait_for: host=0.0.0.0 port=5000 timeout=300 delay=10 state=started
