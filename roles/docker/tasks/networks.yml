- name: Docker User Defined Network
  shell: docker network inspect {{ docker_network_name }} 
  become: true
  ignore_errors: true
  register: dockernet

- name: list running Docker containers
  shell: docker ps
  become: true
  ignore_errors: true
  when: dockernet is succeeded
  register: dockerps

- name: stop all running Docker containers 
  shell: "docker stop $(sudo docker ps -a -q)"
  become: true
  ignore_errors: true
  when: dockerps is succeeded and dockernet is succeeded

- name: remove Docker network
  shell: "docker network rm {{ docker_network_name }}"
  become: true
  ignore_errors: true
  when: dockernet is succeeded
  register: dockernetremoved

- name: Docker creating network
  shell: 'docker network create --driver=bridge --subnet={{ docker_addr_space }} --gateway={{ docker_gateway }} --ip-range={{ docker_ip_range }} "{{ docker_network_name }}"'
  become: true
#  notify:
#    - restart docker
  when: dockernetremoved is succeeded

- name: restart Docker engine
  systemd:
    name: docker
    state: restarted
    daemon_reload: yes

- pause:
    seconds: 5
