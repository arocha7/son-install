- debug: msg="##### INSTALLING OpenVPN {{ lookup('pipe', 'date +%Y%m%d-%H:%M:%S') }}"

- name: previous install APTitude
  apt: name=aptitude state=present

- name: upgrade all packages to the latest version
  apt: upgrade=yes update_cache=yes

## INSTALL

- name: install OpenVPN and tools
  apt: name={{ item }} state=latest
  with_items:
    - openvpn
    - easy-rsa

## SETUP

- name: setup 'vars' for CA
  copy:
    src: "{{ lookup('env','PWD') }}/roles/openvpn/files/vars"
    dest: /usr/share/easy-rsa/

- file:
    path: "{{ lookup('env','HOME') }}/openvpnca"
    state: directory
    state: absent

- name: setup the CA directory
  shell: "make-cadir {{ lookup('env','HOME') }}/openvpnca"
  become: false

- name: prepare the build of CA
  shell: "cd {{ lookup('env','HOME') }}/openvpnca/ && source vars executable=/bin/bash && ./clean-all"
  become_user: "{{ vm_user }}"

- name: building the CA
  shell: "cd {{ lookup('env','HOME') }}/openvpnca/ && source vars executable=/bin/bash && ./pkitool --initca"
  become_user: "{{ vm_user }}"

- name: building the CA
  shell: "cd {{ lookup('env','HOME') }}/openvpnca/ && source vars executable=/bin/bash && ./pkitool --server server"
  become_user: "{{ vm_user }}"

- name: generate a strong Diffie-Hellman keys
  shell: "{{ lookup('env','HOME') }}/openvpnca/build-dh"
  become_user: "{{ vm_user }}"

- name: generate an HMAC signature to strengthen the server TLS integrity verification capabilities
  shell: "openvpn --genkey --secret {{ lookup('env','HOME') }}/openvpnca/keys/ta.key"
  become_user: "{{ vm_user }}"
 
## CONFIG

- name: Copy the generated files to the OpenVPN Directory
  block:
    - copy:
        src: "{{ lookup('env','HOME') }}/openvpn-ca/keys/{{ item }}"
        dest: /etc/openvpn
        remote_src: yes
      with_fileglob:
        - ca.crt
        - server.crt
        - server.key
        - ta.key
        - dh2048.pem
    - file:
        path: /etc/openvpn
        state: directory
        mode: 0755
    - apt: name=unzip state=present
    - shell: 'gunzip /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz'
    - copy:
        src: /usr/share/doc/openvpn/examples/sample-config-files/server.conf
        dest: /etc/openvpn
        remote_src: yes

- name: open firewall ports
  block:
  - ufw:
      rule: allow
      port: '1194'
      proto: udp
  - ufw:
      rule: allow
      name: 'OpenSSH'

- name: enable IP Forwarding
  # this will route all web traffic from your client to your server’s IP address,
  # and your client’s public IP address will effectively be hidden
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    state: present
    reload: yes
  notify:
    - restart networking

## START

